interface ArceeMessage {
    role: 'user' | 'assistant' | 'system'
    content: string
  }
  
  interface ArceeResponse {
    choices: Array<{
      message: {
        content: string
        role: string
      }
    }>
    usage?: {
      prompt_tokens: number
      completion_tokens: number
      total_tokens: number
    }
  }
  
  export class ArceeClient {
    private readonly baseURL = 'https://conductor.arcee.ai/v1'
    private readonly token: string
  
    constructor() {
      this.token = process.env.ARCEE_TOKEN || process.env.NEXT_PUBLIC_ARCEE_TOKEN || ''
      if (!this.token) {
        throw new Error('ARCEE_TOKEN is required')
      }
    }
  
    async generateResponse(messages: ArceeMessage[]): Promise<string> {
      try {
        const response = await fetch(`${this.baseURL}/chat/completions`, {
          method: 'POST',
          headers: {
            'Authorization': `Bearer ${this.token}`,
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            model: 'auto',
            messages,
            temperature: 0.7,
            max_tokens: 2500,
          }),
        })
  
        if (!response.ok) {
          const errorData = await response.json().catch(() => ({}))
          throw new Error(`API Error: ${response.status} - ${errorData.error?.message || 'Unknown error'}`)
        }
  
        const data: ArceeResponse = await response.json()
        
        if (!data.choices || data.choices.length === 0) {
          throw new Error('No response generated')
        }
  
        return data.choices[0].message.content
      } catch (error) {
        console.error('Arcee API Error:', error)
        if (error instanceof Error) {
          throw error
        }
        throw new Error('Failed to generate response')
      }
    }
  
    async generateVBACode(prompt: string): Promise<{ explanation: string; code: string }> {
      const systemPrompt = this.getVBASystemPrompt()
      const userPrompt = this.formatVBAUserPrompt(prompt)
  
      const messages: ArceeMessage[] = [
        { role: 'system', content: systemPrompt },
        { role: 'user', content: userPrompt }
      ]
  
      const response = await this.generateResponse(messages)
      return this.parseVBAResponse(response)
    }
  
    private getVBASystemPrompt(): string {
      return `Voc√™ √© um especialista em VBA (Visual Basic for Applications) focado em ajudar usu√°rios iniciantes e intermedi√°rios. Sua miss√£o √© gerar c√≥digo VBA funcional, did√°tico e seguro.
  
  DIRETRIZES FUNDAMENTAIS:
  
  1. **FORMATO DE RESPOSTA OBRIGAT√ìRIO:**
     Sua resposta DEVE seguir EXATAMENTE este formato Markdown:
  
     ## üìã An√°lise da Solicita√ß√£o
     [Breve an√°lise do que foi pedido]
  
     ## üéØ Funcionalidade
     [Explica√ß√£o clara do que o c√≥digo faz]
  
     ## üìù Como Aplicar
     1. **Abrir o Editor VBA:** Pressione \`Alt+F11\` no Excel
     2. **Criar M√≥dulo:** Clique em \`Inserir ‚Üí M√≥dulo\`
     3. **Colar C√≥digo:** Cole o c√≥digo gerado no m√≥dulo
     4. **Executar:** Pressione \`F5\` ou \`Alt+F8\` para executar
  
     ## ‚öôÔ∏è Configura√ß√µes Necess√°rias
     [Mencione qualquer configura√ß√£o especial, se houver]
  
     ## üí° Dicas de Uso
     - [Dica 1]
     - [Dica 2]
     - [Dica 3]
  
     ## üîß Personaliza√ß√£o
     [Como o usu√°rio pode adaptar o c√≥digo para suas necessidades]
  
     ## ‚ö†Ô∏è Observa√ß√µes Importantes
     [Avisos sobre backup, testes, etc.]
  
  2. **QUALIDADE DO C√ìDIGO:**
     - Sempre use "Option Explicit" quando relevante
     - Inclua tratamento b√°sico de erros com \`On Error\`
     - Use vari√°veis com nomes descritivos em portugu√™s
     - Adicione coment√°rios explicativos
     - Use "Set objeto = Nothing" para limpeza de mem√≥ria
     - Valide entradas quando necess√°rio
  
  3. **SEGURAN√áA E BOAS PR√ÅTICAS:**
     - Evite opera√ß√µes que possam causar perda de dados
     - Sempre sugira backup antes de executar
     - Use \`Application.ScreenUpdating = False\` para otimiza√ß√£o
     - Implemente confirma√ß√µes para a√ß√µes cr√≠ticas
  
  4. **DID√ÅTICA:**
     - Explique conceitos t√©cnicos de forma simples
     - Use exemplos pr√°ticos
     - Forne√ßa alternativas quando poss√≠vel
     - Inclua troubleshooting b√°sico
  
  5. **ESTRUTURA DO C√ìDIGO:**
     Sempre estruture o c√≥digo VBA desta forma:
     \`\`\`vba
     Option Explicit ' Se aplic√°vel
     
     Sub NomeProcedimento()
         ' Declara√ß√£o de vari√°veis
         Dim var1 As String
         Dim var2 As Integer
         
         ' Configura√ß√µes iniciais
         Application.ScreenUpdating = False
         
         ' Tratamento de erros
         On Error GoTo TrataErro
         
         ' L√≥gica principal aqui
         ' [C√≥digo funcional]
         
         ' Limpeza e finaliza√ß√£o
         Application.ScreenUpdating = True
         MsgBox "Opera√ß√£o conclu√≠da com sucesso!"
         Exit Sub
         
     TrataErro:
         Application.ScreenUpdating = True
         MsgBox "Erro: " & Err.Description
     End Sub
     \`\`\`
  
  6. **TIPOS DE C√ìDIGO PREFERIDOS:**
     - Manipula√ß√£o de dados em Excel
     - Automa√ß√£o de tarefas repetitivas
     - Formul√°rios simples
     - Relat√≥rios e dashboards
     - Valida√ß√£o e formata√ß√£o de dados
     - Importa√ß√£o/exporta√ß√£o de dados
  
  7. **MARKDOWN OBRIGAT√ìRIO:**
     - Use **negrito** para destacar pontos importantes
     - Use \`c√≥digo inline\` para nomes de vari√°veis e comandos
     - Use listas numeradas para passos sequenciais
     - Use listas com bullets para dicas e observa√ß√µes
     - Use emojis para tornar mais visual e amig√°vel
  
  **EXEMPLO DE RESPOSTA PERFEITA:**
  
  ## üìã An√°lise da Solicita√ß√£o
  Voc√™ solicitou um c√≥digo para criar uma lista numerada, que √© √∫til para organiza√ß√£o de dados e cria√ß√£o de √≠ndices autom√°ticos.
  
  ## üéØ Funcionalidade
  Este c√≥digo VBA cria automaticamente uma lista numerada na **coluna A** da planilha ativa, inserindo valores sequenciais de "Item 1" at√© "Item 10".
  
  ## üìù Como Aplicar
  1. **Abrir o Editor VBA:** Pressione \`Alt+F11\` no Excel
  2. **Criar M√≥dulo:** Clique em \`Inserir ‚Üí M√≥dulo\`
  3. **Colar C√≥digo:** Cole o c√≥digo gerado no m√≥dulo
  4. **Executar:** Pressione \`F5\` ou \`Alt+F8\`, escolha "CriarLista" e clique "Executar"
  
  ## ‚öôÔ∏è Configura√ß√µes Necess√°rias
  - Excel com macros habilitadas
  - Nenhuma configura√ß√£o especial necess√°ria
  
  ## üí° Dicas de Uso
  - **Personalize o intervalo:** Altere os valores \`1 To 10\` para definir quantos itens criar
  - **Mude a coluna:** Substitua \`Cells(i, 1)\` por \`Cells(i, 2)\` para usar a coluna B
  - **Texto personalizado:** Modifique \`"Item "\` para qualquer texto desejado
  
  ## üîß Personaliza√ß√£o
  Para criar **50 itens** em vez de 10, altere esta linha:
  \`For i = 1 To 50\`
  
  Para usar texto diferente:
  \`ws.Cells(i, 1).Value = "Produto " & i\`
  
  ## ‚ö†Ô∏è Observa√ß√µes Importantes
  - **Fa√ßa backup** da planilha antes de executar
  - O c√≥digo **substitui** dados existentes na coluna A
  - Teste primeiro em uma planilha vazia
  
  Sempre mantenha este padr√£o de qualidade, did√°tica e formata√ß√£o em Markdown.`
    }
  
    private formatVBAUserPrompt(prompt: string): string {
      return `**SOLICITA√á√ÉO DO USU√ÅRIO:**
  "${prompt}"
  
  **INSTRU√á√ïES:**
  1. Gere c√≥digo VBA funcional e testado para esta solicita√ß√£o
  2. Formate sua resposta EXATAMENTE no padr√£o Markdown especificado no sistema
  3. Seja did√°tico e inclua todas as se√ß√µes obrigat√≥rias
  4. Use emojis e formata√ß√£o para tornar a resposta mais amig√°vel
  5. Garanta que o c√≥digo seja seguro e inclua tratamento de erros
  6. Foque na facilidade de uso para iniciantes
  
  **LEMBRE-SE:** A resposta deve come√ßar com "## üìã An√°lise da Solicita√ß√£o" e seguir exatamente o formato Markdown especificado.`
    }
  
    private parseVBAResponse(response: string): { explanation: string; code: string } {
      try {
        // Procura por c√≥digo VBA entre ```vba e ```
        const codeMatch = response.match(/```vba\s*([\s\S]*?)\s*```/i)
        let code = codeMatch?.[1]?.trim() || ''
  
        // Se n√£o encontrou com ```vba, procura apenas ```
        if (!code) {
          const generalCodeMatch = response.match(/```\s*([\s\S]*?)\s*```/)
          code = generalCodeMatch?.[1]?.trim() || ''
        }
  
        // Fallback para c√≥digo b√°sico se nada foi encontrado
        if (!code || code.length < 10) {
          code = `Option Explicit

Sub CodigoPersonalizado()
    ' C√≥digo gerado pelo Lynx AI
    ' Solicita√ß√£o: ${response.substring(0,50)}...
    Dim ws As Worksheet
    Set ws = ActiveSheet

    ' Sua l√≥gica personalizada aqui
    MsgBox "C√≥digo VBA gerado com base na sua solicita√ß√£o!"

    ' Limpeza
    Set ws = Nothing
End Sub`
        }
        // Remove o c√≥digo da explica√ß√£o para evitar duplica√ß√£o
        let explanation = response.replace(/```vba[\s\S]*?```/gi, '').replace(/```[\s\S]*?```/g, '').trim()
        
        // Se a explica√ß√£o estiver vazia, cria uma explica√ß√£o padr√£o
        if (!explanation || explanation.length < 20) {
          explanation = `## üìã An√°lise da Solicita√ß√£o\nC√≥digo VBA personalizado gerado com base na sua solicita√ß√£o.\n\nüéØ Funcionalidade\nEste c√≥digo executa a funcionalidade solicitada de forma segura e eficiente.\n\nüìù Como Aplicar\n\n- Abrir o Editor VBA: Pressione \`Alt+F11\` no Excel\n- Criar M√≥dulo: Clique em \`Inserir ‚Üí M√≥dulo\`\n- Colar C√≥digo: Cole o c√≥digo gerado no m√≥dulo\n- Executar: Pressione \`F5\` para executar\n\nüí° Dicas de Uso\n- Teste primeiro em uma planilha de exemplo\n- Fa√ßa backup dos seus dados antes de executar\n- Personalize as vari√°veis conforme necess√°rio\n\n‚ö†Ô∏è Observa√ß√µes Importantes\n- Certifique-se de que as macros estejam habilitadas\n- Teste o c√≥digo em um ambiente seguro primeiro`
        }
        return {
          explanation,
          code
        }
      } catch (error) {
        console.error('Error parsing VBA response:', error)
        return {
          explanation: `## üìã An√°lise da Solicita√ß√£o\n\n\nC√≥digo VBA gerado com sucesso para sua solicita√ß√£o.\n\nüéØ Funcionalidade\nEste c√≥digo executa a tarefa solicitada de forma funcional e segura.\n\nüìù Como Aplicar\n\n- Abrir o Editor VBA: Pressione \`Alt+F11\` no Excel\n- Criar M√≥dulo: Clique em \`Inserir ‚Üí M√≥dulo\`\n- Colar C√≥digo: Cole o c√≥digo abaixo no m√≥dulo\n- Executar: Pressione \`F5\` para executar\n\nüí° Dicas de Uso\n- Fa√ßa backup da planilha antes de executar\n- Teste primeiro em dados de exemplo\n- Customize conforme suas necessidades\n\n‚ö†Ô∏è Observa√ß√µes Importantes\n- Certifique-se de que as macros estejam habilitadas\n- O c√≥digo foi otimizado para iniciantes`,
          code: `Option Explicit\n\nSub CodigoPersonalizado()\n    ' C√≥digo gerado pelo Lynx AI\n    Dim ws As Worksheet\n    Set ws = ActiveSheet\n    ' Desabilita atualiza√ß√£o de tela para performance\n    Application.ScreenUpdating = False\n\n    ' Sua l√≥gica personalizada aqui\n    MsgBox "C√≥digo VBA funcional gerado pelo Lynx AI!"\n\n    ' Restaura configura√ß√µes\n    Application.ScreenUpdating = True\n\n    ' Limpeza de mem√≥ria\n    Set ws = Nothing\nEnd Sub`
        }
      }
    }
  }
  
  export const arceeClient = new ArceeClient()